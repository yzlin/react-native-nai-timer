///
/// JHybridNitroTimerSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridNitroTimerSpec.hpp"



#include <functional>
#include "JFunc_void_double.hpp"

namespace margelo::nitro::nitrotimer {

  jni::local_ref<JHybridNitroTimerSpec::jhybriddata> JHybridNitroTimerSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridNitroTimerSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridNitroTimerSpec::initHybrid),
    });
  }

  size_t JHybridNitroTimerSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  void JHybridNitroTimerSpec::dispose() noexcept {
    static const auto method = javaClassStatic()->getMethod<void()>("dispose");
    method(_javaPart);
  }

  // Properties
  

  // Methods
  double JHybridNitroTimerSpec::setTimeout(const std::function<void(double /* id */)>& callback, double delay) {
    static const auto method = javaClassStatic()->getMethod<double(jni::alias_ref<JFunc_void_double::javaobject> /* callback */, double /* delay */)>("setTimeout_cxx");
    auto __result = method(_javaPart, JFunc_void_double_cxx::fromCpp(callback), delay);
    return __result;
  }
  void JHybridNitroTimerSpec::clearTimeout(double id) {
    static const auto method = javaClassStatic()->getMethod<void(double /* id */)>("clearTimeout");
    method(_javaPart, id);
  }
  double JHybridNitroTimerSpec::setInterval(const std::function<void(double /* id */)>& callback, double interval) {
    static const auto method = javaClassStatic()->getMethod<double(jni::alias_ref<JFunc_void_double::javaobject> /* callback */, double /* interval */)>("setInterval_cxx");
    auto __result = method(_javaPart, JFunc_void_double_cxx::fromCpp(callback), interval);
    return __result;
  }
  void JHybridNitroTimerSpec::clearInterval(double id) {
    static const auto method = javaClassStatic()->getMethod<void(double /* id */)>("clearInterval");
    method(_javaPart, id);
  }
  void JHybridNitroTimerSpec::clearAllTimers() {
    static const auto method = javaClassStatic()->getMethod<void()>("clearAllTimers");
    method(_javaPart);
  }

} // namespace margelo::nitro::nitrotimer
